# -*- coding: utf-8 -*-
"""map

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Apj_PsUeqcgKeMRNlTjAEQ_k3RL-N-Bn
"""

import folium
from geopy.distance import geodesic

# Define the coordinates
point_1 = (36.325735, 43.928414)
point_2 = (36.393432, 44.586781)
point_3 = (36.660477, 43.840174)

# Calculate distances
distance_1_2 = geodesic(point_1, point_2).kilometers
distance_2_3 = geodesic(point_2, point_3).kilometers
distance_1_3 = geodesic(point_1, point_3).kilometers

# Print the distances
print(f"Distance between Point 1 and Point 2: {distance_1_2:.2f} km")
print(f"Distance between Point 2 and Point 3: {distance_2_3:.2f} km")
print(f"Distance between Point 1 and Point 3: {distance_1_3:.2f} km")

# Create a Folium map centered around the average coordinates
map_center = [(point_1[0] + point_2[0] + point_3[0]) / 3, (point_1[1] + point_2[1] + point_3[1]) / 3]
m = folium.Map(location=map_center, zoom_start=8)

# Add points to the map
folium.Marker(location=point_1, popup='Point 1', icon=folium.Icon(color='blue')).add_to(m)
folium.Marker(location=point_2, popup='Point 2', icon=folium.Icon(color='green')).add_to(m)
folium.Marker(location=point_3, popup='Point 3', icon=folium.Icon(color='red')).add_to(m)

# Add distances to the map
folium.Marker(
    location=[(point_1[0] + point_2[0]) / 2, (point_1[1] + point_2[1]) / 2],
    popup=f'Distance 1-2: {distance_1_2:.2f} km',
    icon=folium.Icon(color='orange')
).add_to(m)

folium.Marker(
    location=[(point_2[0] + point_3[0]) / 2, (point_2[1] + point_3[1]) / 2],
    popup=f'Distance 2-3: {distance_2_3:.2f} km',
    icon=folium.Icon(color='orange')
).add_to(m)

folium.Marker(
    location=[(point_1[0] + point_3[0]) / 2, (point_1[1] + point_3[1]) / 2],
    popup=f'Distance 1-3: {distance_1_3:.2f} km',
    icon=folium.Icon(color='orange')
).add_to(m)

# Display the map
m

# Display the map
map_kurdistan.save("map_kurdistan.html")
map_kurdistan

import folium
from geopy.distance import geodesic
from IPython.display import display, HTML

# Define the coordinates
points = {
    "Point 1": (36.325735, 43.928414),
    "Point 2": (36.393432, 44.586781),
    "Point 3": (36.660477, 43.840174),
}

# Create a Folium map centered around the first point
m = folium.Map(location=points["Point 1"], zoom_start=8)

# Add markers for each point
for point, coords in points.items():
    folium.Marker(location=coords, popup=point).add_to(m)

# Calculate distances
distances = {
    "Point 1 to Point 2": geodesic(points["Point 1"], points["Point 2"]).kilometers,
    "Point 2 to Point 3": geodesic(points["Point 2"], points["Point 3"]).kilometers,
    "Point 1 to Point 3": geodesic(points["Point 1"], points["Point 3"]).kilometers,
}

# Add lines between points with distance labels
line_pairs = [
    (points["Point 1"], points["Point 2"]),
    (points["Point 2"], points["Point 3"]),
    (points["Point 1"], points["Point 3"]),
]

for (coords_a, coords_b) in line_pairs:
    folium.PolyLine([coords_a, coords_b], color='blue', weight=2.5, opacity=1).add_to(m)
    mid_point = ((coords_a[0] + coords_b[0]) / 2, (coords_a[1] + coords_b[1]) / 2)
    distance = geodesic(coords_a, coords_b).kilometers
    folium.Marker(location=mid_point,
                  popup=f"{distance:.2f} km",
                  icon=folium.Icon(color='green')).add_to(m)

# Display the map
display(m)

# Create and display the distance report
distance_report = "<h3>Distance Report:</h3>"
distance_report += "<ul>" + "".join([f"<li><strong>{pair}</strong>: {distance:.2f} km</li>" for pair, distance in distances.items()]) + "</ul>"
display(HTML(distance_report))

